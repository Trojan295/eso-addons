on:
  push:
    tags:
      - "v*"

name: Create Release
env:
  PROJECT_NAME: ${{ github.event.repository.name }}

jobs:
  build:
    name: Build application
    runs-on: ${{ matrix.runs_on }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            runs_on: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            runs_on: windows-latest
          - target: x86_64-apple-darwin
            runs_on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Rust toolchain "${{ matrix.target }}"
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
          profile: minimal

      - name: Build binary "${{ matrix.target }}"
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --verbose --target=${{ matrix.target }}

      - name: Test binary "${{ matrix.target }}"
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test
          args: --release --verbose --target=${{ matrix.target }}

      - name: Rename binary file
        shell: bash
        run: |
          origin="$(find target/${{ matrix.target }}/release -maxdepth 1 -perm -111 -iname "${{ env.PROJECT_NAME }}*")"
          dest="${origin/${{ env.PROJECT_NAME}}/${{ env.PROJECT_NAME}}-${{ matrix.target}}}"
          mv "$origin" "$dest"
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target }}
          path: ./target/${{ matrix.target }}/release/${{ env.PROJECT_NAME }}-${{ matrix.target }}*

  release_and_publish:
    name: Create release and publish
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Create Release And Publish These Artifacts
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ env.PROJECT_NAME }} ${{ github.ref }}
          files: |
            artifacts/*/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
